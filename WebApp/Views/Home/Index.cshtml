@using WebApp.Models.ViewModels;

@model WMCliente

@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                <h2>Clientes</h2>
            </div>
            <div class="card-body">
                <button class="btn btn-primary" id="btnNuevoCliente">
                    Nuevo Cliente
                </button>
                <hr />
                <table class="table table-striped" id="tbClientes">
                    <thead>
                        <tr>
                            <th>Nombre Cliente</th>
                            <th>Dirección</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="tbody_tbClientes">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal" tabindex="1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Creación de Cliente</h5>
                <button type="button" class="btn btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="txtIdcliente" value="0" />
                <div class="mb-2">
                    <label class="form-label">Nombre Cliente</label>
                    <input type="text" class="form-control" id="txtClienteNombre" />
                </div>
                <div class="mb-2">
                    <label class="form-label">Dirección</label>
                    <input type="text" class="form-control" id="txtDireccion" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="btnGuardar">Guardar</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>
        $(document).ready(() => {

            ListaClientes();

            const Modelo_base = {
                IdCliente: 0,
                Nombre: "",
                Direccion: ""
            }

            function mostrarModal(modelo) {

                $("#txtIdcliente").val(modelo.IdCliente);
                $("#txtClienteNombre").val(modelo.Nombre);
                $("#txtDireccion").val(modelo.Direccion);


                $('.modal').modal('show');

            }

            function mostrarModalEdit(modelo){
                $("#txtIdcliente").val(modelo.idcliente);
                $("#txtClienteNombre").val(modelo.nombreCliente);
                $("#txtDireccion").val(modelo.direccion);


                $('.modal').modal('show');
            }


            $("#btnNuevoCliente").click(() => {

                $("#txtClienteNombre").val("");
                $("#txtDireccion").val("");
                mostrarModal(Modelo_base);
                

            })

            

            $("#btnGuardar").click(() => {


                let nuevomodelo = Modelo_base;

                nuevomodelo["Idcliente"] = $("#txtIdcliente").val();
                nuevomodelo["NombreCliente"] = $("#txtClienteNombre").val();
                nuevomodelo["Direccion"] = $("#txtDireccion").val();

                if(!$("#txtClienteNombre").val()){
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "El campo nombre esta vacio",
                    })

                }
                else if (!$("#txtDireccion").val()) {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "El campo direccion esta vacio",
                    })
                }
                else{
                    if ($("#txtIdcliente").val() == "0") {

                        fetch("Home/Insertar", {

                            method: "POST",
                            headers: {
                                'Content-Type': 'application/json;charset=utf-8'
                            },
                            body: JSON.stringify(nuevomodelo)

                        })
                            .then((response) => {
                                return response.ok ? response.json() : Promise.reject(response)
                            })
                            .then((dataJson) => {
                                if (dataJson.valor) {
                                    alert("Cliente Registrado");
                                    $('.modal').modal('hide');
                                    ListaClientes();
                                }
                            })
                    } else {
                        fetch("Home/Actualizar", {
                            method: "PUT",
                            headers: {
                                'Content-Type': 'application/json;charset=utf-8'
                            },
                            body: JSON.stringify(nuevomodelo)

                        })
                            .then((response) => {
                                return response.ok ? response.json() : Promise.reject(response)
                            })
                            .then((dataJson) => {
                                if (dataJson.valor) {
                                    alert("Cliente Actualizado");
                                    $('.modal').modal('hide');
                                    ListaClientes();
                                }
                            })
                    }
                }
                
               
            });

            function ListaClientes() {

                fetch("Home/Lista")
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })
                    .then((dataJson) => {

                        //console.log("Respuesta json:", dataJson);
                        // Limpia el contenido actual del tbody de la tabla
                        $("tbody#tbody_tbClientes").html("");

                        // Itera sobre los datos recibidos y agrega cada cliente como una fila en la tabla.
                        dataJson.forEach((item) => {

                            console.log(item);

                            $("tbody#tbody_tbClientes").append(
                                $("<tr>").append(
                                    $("<td>").text(item.nombreCliente),
                                    $("<td>").text(item.direccion),
                                    $("<td>").append(
                                        $("<button>").addClass("btn btn-primary btn-sm me-2 btn-editar").data("modelo", item).text("Editar"),
                                        $("<button>").addClass("btn btn-danger btn-sm btn-eliminar").data("id", item.idcliente).text("Eliminar")
                                    )
                                )


                                //'<tr>' +
                                //'<td>' + item.nombreCliente + '</td>' +
                                //'<td>' + item.direccion + '</td>' +
                                //'<td> <button class="btn btn-primary btn-sm me-2 btn-editar" value=' + item.idcliente + '> Editar </button> </td>' +
                                //'</tr>'


                                //$("<td>").append(
                                //    // Agrega botones de editar y eliminar con eventos de clic
                                //    $("<button>").addClass("btn btn-primary btn-sm me-2 btn-editar").data("modelo", item).text("Editar"),
                                //    $("<button>").addClass("btn btn-danger btn-sm btn-eliminar").data("id", item.Idcliente).text("Eliminar")
                                //)

                            )
                        });
                    })
            }

            $("tbody#tbody_tbClientes").on("click",".btn-editar",function() {

                let cliente = $(this).data("modelo")
                console.log(cliente);

                mostrarModalEdit(cliente)
            })


            $("tbody#tbody_tbClientes").on("click", ".btn-eliminar", function () {

                let idcliente = $(this).data("id")
                console.log(idcliente);

                let result = window.confirm("¿Realmente Eliminar Cliente?");

                if(result){
                    fetch("Home/Eliminar?id=" + idcliente, {
                        method: "DELETE"                       

                    })
                        .then((response) => {
                            return response.ok ? response.json() : Promise.reject(response)
                        })
                        .then((dataJson) => {
                            if (dataJson.valor) {
                                ListaClientes();
                            }
                        })
                }
            })
        });

    </script>
}